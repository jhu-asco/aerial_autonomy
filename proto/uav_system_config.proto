syntax = "proto2";

import "uav_vision_system_config.proto";

import "position_controller_config.proto";

import "velocity_controller_config.proto";

import "rpyt_based_position_controller_config.proto";

import "joystick_velocity_controller_config.proto";

import "thrust_gain_estimator_config.proto";

import "odom_from_pose_sensor_config.proto";

import "path_sensor_config.proto";

import "ros_sensor_config.proto";

import "quad_mpc_controller_config.proto";

import "mpc_visualizer_config.proto";

import "mpc_connector_config.proto";

import "rpyt_reference_connector_config.proto";

import "geofence_config.proto";

message UAVSystemConfig {
  /**
  * @brief Battery percentage required for takeoff
  */
  optional int32 minimum_battery_percent = 1 [ default = 40 ];
  /**
  * @brief When UAV reaches this height, takeoff completed.
  */
  optional double minimum_takeoff_height = 2 [ default = 0.5 ];
  /**
  * @brief When UAV reaches this landing height, landing
  * is completed.
  */
  optional double landing_height = 3 [ default = 0.1 ];

  /**
  * @brief If the distance from goal to current position
  * in x, y, and z directions is farther than this distance,
  * the goal is rejected. (GeoFence around current position)
  * TODO Use lat, long coordinates may be
  */
  optional double max_goal_distance = 4 [ default = 100 ];

  /**
  * @brief Position controller configuration
  */
  optional PositionControllerConfig position_controller_config = 5;

  optional VelocityControllerConfig velocity_controller_config = 6;

  optional RPYTBasedPositionControllerConfig
      rpyt_based_position_controller_config = 7;

  optional JoystickVelocityControllerConfig
      joystick_velocity_controller_config = 12;
  /**
  * @brief A crude form of inheritance for proto. Contains a config for
  * subclasses of UAVSystemConfig
  */
  oneof subclass { UAVVisionSystemConfig uav_vision_system_config = 8; }

  /**
  * @brief Sets the max velocity the velocity controller can track
  * along x, y, z axis.
  */
  optional double max_goal_velocity = 9 [ default = 2.0 ];
  /**
  * @brief Hardware parser plugin name
  * These are provided by rqt_quadcopter_parsers package
  */
  optional string uav_parser_type = 10
      [ default = "quad_simulator_parser/QuadSimParser" ];
  /**
  * @brief Timestep in milliseconds for timer which runs uav controller
  * continously
  */
  optional int32 uav_controller_timer_duration = 11 [ default = 20 ];

  /**
  * @brief Thrust estimator config
  */
  optional ThrustGainEstimatorConfig thrust_gain_estimator_config = 13;
  /**
  * @brief String to choose sensor type
  */
  optional string sensor_type = 14 [ default = "Guidance" ];
  /**
  * @brief Velocity sensor config
  */
  optional ROSSensorConfig velocity_sensor_config = 15;
  /**
  * @brief If to use mocap ros sensor for pose sensor
  */
  optional bool use_mocap_sensor = 16 [ default = false ];
  /**
  * @brief Odometry sensor config
  */
  optional OdomSensorConfig odom_sensor_config = 17;
  /**
  * @brief MPC Config for quadrotor
  */
  optional QuadMPCControllerConfig quad_mpc_controller_config = 18;
  /**
  * @brief MPC connector config
  */
  optional MPCConnectorConfig mpc_connector_config = 19;
  /**
  * @brief Visualizing MPC trajectories
  */
  optional MPCVisualizerConfig visualizer_config = 20;
  /**
  * @brief Flag to specify whether to visualize MPC trajectories
  */
  optional bool visualize_mpc_trajectories = 21 [ default = false ];
  /**
  * @brief RPYT reference connector config
  */
  optional RPYTReferenceConnectorConfig rpyt_reference_connector_config = 22;
  /**
  * @brief Odometry sensor config
  */
  optional PathSensorConfig path_sensor_config = 23;
  /**
  * @brief If to path ros sensor for path sensor
  */
  optional bool use_path_sensor = 24 [ default = false ];
  /**
  * @brief Maximum Altitude
  */
  optional GeofenceConfig geofence_config = 25;
  /**
  * @brief Success Sensor Config
  */
  optional ROSSensorConfig success_config = 26;
  /**
  * @brief If using success sensor
  */
  optional bool use_success_sensor = 27 [ default = false ];
}
