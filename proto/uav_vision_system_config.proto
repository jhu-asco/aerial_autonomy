syntax = "proto2";

import "constant_heading_depth_controller_config.proto";
import "rpyt_based_relative_pose_controller_config.proto";
import "uav_arm_system_config.proto";
import "transform.proto";
import "tracking_vector_estimator_config.proto";
import "particle_reference_config.proto";
import "polynomial_reference_config.proto";
import "velocity_based_relative_pose_controller_config.proto";
import "acceleration_bias_estimator_config.proto";

message UAVVisionSystemConfig {
  required ConstantHeadingDepthControllerConfig
      constant_heading_depth_controller_config = 1;

  /**
  * @brief Config for relative pose UAV controller
  */
  optional RPYTBasedRelativePoseControllerConfig
      rpyt_based_relative_pose_controller_config = 6;

  /**
  * @brief Desired distance to tracked position in meters
  */
  required double desired_visual_servoing_distance = 2 [ default = 3.0 ];

  /**
  * @brief Camera transform in the frame of the UAV (assuming NWU).
  */
  optional config.Transform camera_transform = 3;

  /**
  * @brief Transform to apply to tracked object before rotation-compensation (to
  * avoid issues with singularities).
  */
  optional config.Transform tracking_offset_transform = 7;

  /**
  * @brief Type of tracker to use, e.g. Alvar, ROI
  */
  optional string tracker_type = 4 [ default = "ROI2Pos" ];

  /**
  * @brief Tracker timeout to use (if applicable)
  */
  optional double tracker_timeout = 5 [ default = 0.5 ];

  /**
  * @brief A crude form of inheritance for proto. Contains a config for
  * subclasses of UAVVisionSystemConfig
  */
  oneof subclass { UAVArmSystemConfig uav_arm_system_config = 8; }

  optional TrackingVectorEstimatorConfig tracking_vector_estimator_config = 9;
  /**
  * @brief visual servoing reference trajectory generation
  */
  optional ParticleReferenceConfig particle_reference_config = 10;
  /**
  * @brief Timestep in milliseconds for timer which runs high level
  * continously
  */
  optional int32 high_level_controller_timer_duration = 11 [ default = 50 ];
  /**
  * @brief Filter on visual servoing tracking position yaw
  */
  optional double gain_visual_servoing_tracking_pose = 12 [ default = 0.1 ];
  /**
  * @brief polynomial reference config
  */
  optional PolynomialReferenceConfig poly_reference_config = 13;
  /**
  * @brief Config for velocity based relative pose UAV controller
  */
  optional VelocityBasedRelativePoseControllerConfig
      velocity_based_relative_pose_controller_config = 14;
  /**
  * @brief Config for acceleration bias estimator
  */
  optional AccelerationBiasEstimatorConfig acceleration_bias_estimator_config =
      15;
}
