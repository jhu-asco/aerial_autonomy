#!/bin/bash
# Check Documentation coverage
branch_name=`git rev-parse --abbrev-ref HEAD`
if [[ $branch_name == develop* ]];
then
  echo "Development branch no push checks"
  exit 0
fi
threshold=95
GIT_REPO_PATH=`git rev-parse --show-toplevel`
cd $GIT_REPO_PATH
echo "Generating documentation coverage report..."
doxygen $GIT_REPO_PATH/Doxyfile > /dev/null
# Create coverage folder if it does not exist
[ -d .documentation_coverage_info ] || mkdir .documentation_coverage_info
python -m coverxygen --xml-dir ./docs/xml --src-dir . --output ./.documentation_coverage_info/doc_coverage.info > /dev/null
echo "Checking documentation Coverage..."
./scripts/test_coverage.py --threshold $threshold ./.documentation_coverage_info/doc_coverage.info
error=$?
if [ $error -ne 0 ]
then
    echo "Commit did not have enough documentation"
    echo "Documentation threshold for code to pass is $threshold."
    codecoverage=`expr $threshold - $error`
    echo "The documentation coverage is $codecoverage percentage"
    echo "The code is short by $error percentage"
    echo "Running documentation coverage html generation script"
    genhtml --no-function-coverage --no-branch-coverage .documentation_coverage_info/doc_coverage.info -o ./.documentation_coverage_info > /dev/null
    lcov --summary ./documentation_coverage_info/doc_coverage.info
    echo "Check code-coverage-info/index.html for detailed code generation stats"
    exit 1;
fi

# Generate test coverage
if [ ! -f ./scripts/generate_test_coverage.bash ]; then
  echo "Test coverage script not found!"
  echo "Generating Test script!"
  catkin build aerial_autonomy > /dev/null
fi
echo "Generating test coverage report..."
./scripts/generate_test_coverage.bash
error=$?
if [ $error -ne 0 ]
then
  echo "Test coverage generation failed"
  exit 1
fi

# Check test coverage
threshold=95
echo "Checking test coverage..."
./scripts/test_coverage.py --threshold $threshold ./.test_coverage_info/test_coverage.info
error=$?
if [ $error -ne 0 ]
then
    echo "ERROR: Commit did not have enough Line test coverage"
    echo "Testing threshold for code to pass is $threshold."
    codecoverage=`expr $threshold - $error`
    echo "The line testing code coverage is $codecoverage percentage"
    echo "The code is short by $error percentage"
    exit 1;
fi
echo "Passed all tests!"
